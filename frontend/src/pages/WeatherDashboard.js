// src/pages/WeatherDashboard.js
import React, { useState, useEffect } from 'react'; // –î–æ–±–∞–≤–∏–ª useEffect –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
import { useNavigate } from 'react-router-dom';
import { useWeather } from '../hooks/useWeather';
import '../styles/WeatherDashboard.css';
import Navbar from '../components/Navbar';

// ... (—Ç–≤–æ–∏ –∏–º–ø–æ—Ä—Ç—ã –∏–∫–æ–Ω–æ–∫, –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏ —Ç.–¥. –æ—Å—Ç–∞—é—Ç—Å—è) ...
import calendarIcon from '../assets/images/calendar.png';
import rainIcon from '../assets/images/rainy.png';
import thunderIcon from '../assets/images/rain_storm.png';
import cloudIcon from '../assets/images/cloud.png';
import partlyCloudyIcon from '../assets/images/partly_cloudy.png';
import allPhotos from '../assets/images/gallery'; // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤ –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
// import plusIcon from '../assets/images/plusadd.png'; // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ Add Clothes

// –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Å–µ—Ä–¥—Ü–∞, –µ—Å–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
// import heartIconOutline from '../assets/images/heart-outline.svg';
// import heartIconFilled from '../assets/images/heart-filled.svg';

const cities = ['Antwerp, Belgium', 'Berlin, Germany', 'Paris, France'];

const weatherIcons = {
  'partly_cloudy.png': partlyCloudyIcon,
  'rainy.png': rainIcon,
  'rain_storm.png': thunderIcon,
  'cloud.png': cloudIcon
};

export default function WeatherDashboard() {
  const navigate = useNavigate();
  const [search, setSearch] = useState('');
  const [dropdownOpen, setOpen] = useState(false);
  const [activePhoto, setActive] = useState(0); // –ò–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ—Ç–æ
  const { weather, loading, error, city, setCity } = useWeather();

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ (—á—Ç–æ–±—ã –æ–Ω–∏ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å)
  const [currentDateTime, setCurrentDateTime] = useState(new Date());

  useEffect(() => {
    const timerId = setInterval(() => setCurrentDateTime(new Date()), 60000); // –û–±–Ω–æ–≤–ª—è—Ç—å –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    return () => clearInterval(timerId);
  }, []);
  
  const formatDate = (date) => {
    return date.toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }); // –§–æ—Ä–º–∞—Ç "10 April 2025"
  };

  const formatTime = (date) => {
    return date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false }); // –§–æ—Ä–º–∞—Ç "15:10"
  };


  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ç–æ –∏–∑ allPhotos –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –¥–∏—Å–ø–ª–µ—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å. 
  // –ï—Å–ª–∏ –Ω–µ—Ç, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–ª–∏ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö
  const currentOutfitImage = allPhotos && allPhotos.length > 0 ? allPhotos[activePhoto] : tshirtWhiteImg; // Fallback to tshirtWhiteImg
  const currentOutfitName = "H&M White T-Shirt"; // –ü—Ä–∏–º–µ—Ä –Ω–∞–∑–≤–∞–Ω–∏—è, –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ captions –µ—Å–ª–∏ allPhotos –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  const currentOutfitSubtext = "That option is going to be good!";
  
  // captions array –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å allPhotos, –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  // const captions = [ 
  //   'Light beige cotton T-shirt',
  //   'Denim jacket with fleece lining',
  //   'Classic white sneakers',
  // ];


  // Read selected period from localStorage
  const [selectedPeriod, setSelectedPeriod] = useState(() => {
    const stored = localStorage.getItem('selectedPeriod');
    return stored ? JSON.parse(stored) : null;
  });
  
  // ... (–æ—Å—Ç–∞–ª—å–Ω–∞—è —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ getMockTemp, getOutfitSuggestion, getOutfitImage, outfitSets –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

  if (loading && !weather) { // –î–æ–±–∞–≤–∏–ª !weather, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–æ–∞–¥–µ—Ä –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å
    return (
      <div className="weather-dashboard-container">
        <Navbar />
        <div className="loading-message">Loading weather data...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="weather-dashboard-container">
        <Navbar />
        <div className="error-message">Error: {error}</div>
      </div>
    );
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return (
    <div className="weather-dashboard-container"> {/* –û–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <Navbar />
      
      <main className="dashboard-content"> {/* –ö–æ–Ω—Ç–µ–Ω—Ç –º–µ–∂–¥—É Navbar –∏ Footer */}
        {/* Tabs (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã) */}
        <div className="tabs-container">
          {['Inside','Mix','Outside'].map(tab => (
            <div key={tab} className={`tab${tab==='Mix' ? ' active':''}`}>{tab}</div>
          ))}
        </div>

        {/* –ë–ª–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É –≤—Ä–µ–º–µ–Ω–∏ (–∏–∑ TimelineSelector) */}
        {selectedPeriod && (() => {
          const temp = Math.floor(Math.random() * 16) + 10; // getMockTemp(selectedPeriod.start, selectedPeriod.end);
          let suggestion = "Placeholder suggestion"; // getOutfitSuggestion(temp);
          // –≠—Ç–∞ –ª–æ–≥–∏–∫–∞ —É —Ç–µ–±—è –±—ã–ª–∞, –ø—Ä–æ—Å—Ç–æ –Ω–µ–º–Ω–æ–≥–æ —É–ø—Ä–æ—â–∞—é –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –¥–∏–∑–∞–π–Ω–µ –≥–ª–∞–≤–Ω–æ–≥–æ –±–ª–æ–∫–∞
          if (temp < 15) {
            suggestion = 'T-shirt and hoodie would be a nice option!';
          } else {
            suggestion = 'White t-shirt would be a nice option!';
          }
          return (
            <div className="timeline-suggestion-banner">
              <span>Selected: <b>{selectedPeriod.start}‚Äì{selectedPeriod.end}</b> ({selectedPeriod.desc})</span>
              <span>Temp: <b>{temp}¬∞C</b> ‚Äî Suggestion: <b>{suggestion}</b></span>
            </div>
          );
        })()}


        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –æ–¥–µ–∂–¥–æ–π, –ø–æ–≥–æ–¥–æ–π - –ù–û–í–´–ô –î–ò–ó–ê–ô–ù */}
        <section className="outfit-display-card">
          <div className="outfit-card-header-pills">
            <div className="info-pill date-pill">{formatDate(currentDateTime)}</div>
            <div className="info-pill time-pill">{formatTime(currentDateTime)}</div>
          </div>

          <div className="outfit-card-body">
            <div className="outfit-image-carousel">
              {/* –ö–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Å–µ–π—á–∞—Å –æ–¥–Ω–æ) */}
              <img 
                src={currentOutfitImage} 
                alt={currentOutfitName} 
                className="current-outfit-image"
              />
              {/* –¢–æ—á–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ä—É—Å–µ–ª–∏, –µ—Å–ª–∏ —Ñ–æ—Ç–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ */}
              {allPhotos && allPhotos.length > 1 && (
                <div className="carousel-dots">
                  {allPhotos.map((_, idx) => (
                    <button
                      key={idx}
                      className={`dot${idx === activePhoto ? ' active' : ''}`}
                      onClick={() => setActive(idx)}
                      aria-label={`Show outfit ${idx + 1}`}
                    />
                  ))}
                </div>
              )}
            </div>

            <div className="outfit-details">
              <div className="current-temperature">{weather?.current?.temperature ?? 'N/A'}¬∞C</div>
              <h2 className="outfit-name">{currentOutfitName}</h2>
              <p className="outfit-subtext">{currentOutfitSubtext}</p>
              {/* <p className="weather-condition-summary">{weather?.current?.description ?? 'Weather data unavailable'}</p> */}
              {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –æ –ø–æ–≥–æ–¥–µ —Ç—É—Ç */}
            </div>
          </div>
          
          <div className="outfit-card-actions">
            {/* <button className="heart-button">ü§ç</button> {/* –ò–∫–æ–Ω–∫–∞ —Å–µ—Ä–¥—Ü–∞ */}
             {/* –ò–õ–ò SVG/IMG –∏–∫–æ–Ω–∫–∞ */}
             <span className="heart-icon" role="button" tabIndex={0} onClick={() => console.log('Heart clicked!')}>
                {/* –í—Å—Ç–∞–≤–∏—Ç—å SVG —Å–µ—Ä–¥—Ü–∞ —Å—é–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Å–∏–º–≤–æ–ª */}
                {/* –ù–∞–ø—Ä–∏–º–µ—Ä: <img src={heartIconOutline} alt="Favorite" /> */}
                ‚ô° 
             </span>
          </div>
        </section>
        
        {/* –ö–Ω–æ–ø–∫–∞ Add Clothes (–ø–æ–¥ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π) */}
        <button className="add-clothes-button" onClick={() => navigate('/closet')}> {/* –£—Ç–æ—á–Ω–∏ –ø—É—Ç—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
          {/* <img src={plusIcon} alt="" className="plus-icon"/> */}
          <span>+ Add clothes</span>
        </button>


        {/* Daily alert (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–≤–æ—é –ª–æ–≥–∏–∫—É) */}
        <div className="daily-alert-row">
          <div className="daily-alert-clickable" onClick={() => navigate('/timeline')}>
            <img src={calendarIcon} alt="calendar" className="calendar-icon-small" />
            <div>
              <div className="alert-title"><b>Adjust your day schedule</b></div>
              <div className="alert-desc">Get most relevant suggestions</div>
            </div>
          </div>
        </div>

        {/* Hourly forecast (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–≤–æ—é –ª–æ–≥–∏–∫—É) */}
        <section className="weather-hourly-forecast">
          <div className="forecast-header">
            <h2>Weather for the day</h2>
            <div className="location-dropdown-container" onClick={() => setOpen(o => !o)}>
              üìç {city} ‚ñº
              {dropdownOpen && (
                <div className="city-dropdown">
                  {cities.filter(c => c !== city).map((c,i) => (
                    <div key={i} className="city-dropdown-item" onClick={(e) => { e.stopPropagation(); setCity(c); setOpen(false); }}>
                      {c}
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
          <div className="hourly-forecast-list">
            {weather?.hourly?.slice(0, 6).map((hour, index) => ( // –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–æ 6 –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
              <div className="hourly-forecast-item" key={index}>
                <img src={weatherIcons[hour.weatherIcon] || cloudIcon} alt="" className="forecast-item-icon" />
                <div className="forecast-item-temp">{hour.temperature}¬∞</div>
                <div className="forecast-item-time">{hour.time}</div>
              </div>
            ))}
          </div>
        </section>
      </main> {/* –ö–æ–Ω–µ—Ü dashboard-content */}

      <footer className="app-footer">
        <div className="footer-content">
          <div className="footer-logo">SMART STYLE</div>
          <div className="footer-links">
            <a href="/about">About</a>
            <a href="/services">Services</a>
            <a href="/technologies">Technologies</a>
            <a href="/join">Join Us</a>
            <a href="/conditions">Conditions</a>
            <a href="/licenses">Licenses</a>
            <a href="/faq">F.A.Q</a>
            <a href="/sitemap">Sitemap</a>
          </div>
          <div className="footer-social">
            <span>SOCIALIZE WITH US</span>
            <div className="social-icons">
              {/* –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å SVG –∏–∫–æ–Ω–∫–∏ –∏–ª–∏ <img> */}
              <a href="#" aria-label="Instagram"><span className="social-icon placeholder-icon">IG</span></a>
              <a href="#" aria-label="Twitter"><span className="social-icon placeholder-icon">TW</span></a>
              <a href="#" aria-label="LinkedIn"><span className="social-icon placeholder-icon">IN</span></a>
            </div>
          </div>
        </div>
        <div className="footer-copyright">
          2023 ¬© MADE - BY ARTEM FILATOV - ALL RIGHTS RESERVED
        </div>
      </footer>

    </div> // –ö–æ–Ω–µ—Ü weather-dashboard-container
  );
}